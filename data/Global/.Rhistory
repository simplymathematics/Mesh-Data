#for (method in methods){
#  tmp <- dim(subset(data, funding.methods == method))
#  new.row <- cbind(method_bin, tmp)
#  method_bin <- rbind(new.row, method_bin)
#}
#ones <- sum(connections_per_city$connections == 1)
#twos <- sum(connections_per_city$connections == 2)
#threes <- sum(connections_per_city$connections == 3)
#fours <- sum(connections_per_city$connections == 4)
#distribution <- cbind(ones, twos, threes, fours)
#barplot(distribution)
write.csv(data, file = "IXPs.csv")
first.chunk <- which(grepl("<p><strong>", lines))
#lines[first.chunk]
networks <- str_extract(lines[first.chunk], "(?<=<strong>)(.*\n?)(?=</strong>)")
communities <- str_extract(lines[first.chunk+1], "(?<=Served: )(.*)(?=</em>)" )
years <- str_extract(lines[first.chunk+3], "(?<=Year: )(.*)(?=</li>)" )
populations <- str_extract(lines[first.chunk+4], "(?<=Population: )(.*)(?=</li>)" )
costs <- str_extract(lines[first.chunk+5], "(?<=Cost: )(.*)(?=</li>)" )
funding.methods <- str_extract(lines[first.chunk+6], "(?<=Method: )(.*)(?=</li>)" )
governances <- str_extract(lines[first.chunk+7], "(?<=Governance: )(.*)(?=</li>)" )
services <- str_extract(lines[first.chunk+8], "(?<=Services: )(.*)(?=</li>)" )
speeds <- str_extract(lines[first.chunk+9], "(?<=Speed: )(.*)(?=</li>)" )
data <- data.frame(cbind(networks, communities, years, populations, costs, funding.methods, governances, services, speeds))
data
write.csv(data, file = "IXPs.csv")
first.chunk <- which(grepl("<p><strong>", lines))
#lines[first.chunk]
networks <- str_extract(lines[first.chunk], "(?<=<strong>)(.*\n?)(?=</strong>)")
communities <- str_extract(lines[first.chunk+1], "(?<=Served: )(.*)(?=</em>)" )
years <- str_extract(lines[first.chunk+3], "(?<=Year: )(.*)(?=</li>)" )
populations <- str_extract(lines[first.chunk+4], "(?<=Population: )(.*)(?=</li>)" )
costs <- str_extract(lines[first.chunk+5], "(?<=Cost: )(.*)(?=</li>)" )
funding.methods <- str_extract(lines[first.chunk+6], "(?<=Method: )(.*)(?=</li>)" )
governances <- str_extract(lines[first.chunk+7], "(?<=Governance: )(.*)(?=</li>)" )
services <- str_extract(lines[first.chunk+8], "(?<=Services: )(.*)(?=</li>)" )
speeds <- str_extract(lines[first.chunk+9], "(?<=Speed: )(.*)(?=</li>)" )
data <- data.frame(cbind(networks, communities, years, populations, costs, funding.methods, governances, services, speeds))
data
write.csv(data, file = "IXPs.csv")
summary(data$populations)
summary(data$cost)
first.chunk <- which(grepl("<p><strong>", lines))
#lines[first.chunk]
networks <- str_extract(lines[first.chunk], "(?<=<strong>)(.*\n?)(?=</strong>)")
communities <- str_extract(lines[first.chunk+1], "(?<=Served: )(.*)(?=</em>)" )
years <- str_extract(lines[first.chunk+3], "(?<=Year: )(.*)(?=</li>)" )
populations <- str_extract(lines[first.chunk+4], "(?<=Population: )(.*)(?=</li>)" )
costs <- str_extract(lines[first.chunk+5], "(?<=Cost: )(.*)(?=</li>)" )
funding.methods <- str_extract(lines[first.chunk+6], "(?<=Method: )(.*)(?=</li>)" )
governances <- str_extract(lines[first.chunk+7], "(?<=Governance: )(.*)(?=</li>)" )
services <- str_extract(lines[first.chunk+8], "(?<=Services: )(.*)(?=</li>)" )
speeds <- str_extract(lines[first.chunk+9], "(?<=Speed: )(.*)(?=</li>)" )
data <- data.frame(cbind(networks, communities, years, populations, costs, funding.methods, governances, services, speeds))
data
write.csv(data, file = "IXPs.csv")
data
first.chunk <- which(grepl("<p><strong>", lines))
#lines[first.chunk]
networks <- str_extract(lines[first.chunk], "(?<=<strong>)(.*\n?)(?=</strong>)")
communities <- str_extract(lines[first.chunk+1], "(?<=Served: )(.*)(?=</em>)" )
years <- str_extract(lines[first.chunk+3], "(?<=Year: )(.*)(?=</li>)" )
populations <- str_extract(lines[first.chunk+4], "(?<=Population: )(.*)(?=</li>)" )
costs <- str_extract(lines[first.chunk+5], "(?<=Cost: )(.*)(?=</li>)" )
funding.methods <- str_extract(lines[first.chunk+6], "(?<=Method: )(.*)(?=</li>)" )
governances <- str_extract(lines[first.chunk+7], "(?<=Governance: )(.*)(?=</li>)" )
services <- str_extract(lines[first.chunk+8], "(?<=Services: )(.*)(?=</li>)" )
speeds <- str_extract(lines[first.chunk+9], "(?<=Speed: )(.*)(?=</li>)" )
data <- data.frame(cbind(networks, communities, years, populations, costs, funding.methods, governances, services, speeds))
data
write.csv(data, file = "IXPs.csv")
separate(communities, c("City", "State"), sep =',')
first.chunk <- which(grepl("<p><strong>", lines))
#lines[first.chunk]
networks <- str_extract(lines[first.chunk], "(?<=<strong>)(.*\n?)(?=</strong>)")
communities <- str_extract(lines[first.chunk+1], "(?<=Served: )(.*)(?=</em>)" )
years <- str_extract(lines[first.chunk+3], "(?<=Year: )(.*)(?=</li>)" )
populations <- str_extract(lines[first.chunk+4], "(?<=Population: )(.*)(?=</li>)" )
costs <- str_extract(lines[first.chunk+5], "(?<=Cost: )(.*)(?=</li>)" )
funding.methods <- str_extract(lines[first.chunk+6], "(?<=Method: )(.*)(?=</li>)" )
governances <- str_extract(lines[first.chunk+7], "(?<=Governance: )(.*)(?=</li>)" )
services <- str_extract(lines[first.chunk+8], "(?<=Services: )(.*)(?=</li>)" )
speeds <- str_extract(lines[first.chunk+9], "(?<=Speed: )(.*)(?=</li>)" )
data <- data.frame(cbind(networks, communities, years, populations, costs, funding.methods, governances, services, speeds))
data
write.csv(data, file = "IXPs.csv")
separate(data$communities, c("City", "State"), sep =',')
first.chunk <- which(grepl("<p><strong>", lines))
#lines[first.chunk]
networks <- str_extract(lines[first.chunk], "(?<=<strong>)(.*\n?)(?=</strong>)")
communities <- str_extract(lines[first.chunk+1], "(?<=Served: )(.*)(?=</em>)" )
years <- str_extract(lines[first.chunk+3], "(?<=Year: )(.*)(?=</li>)" )
populations <- str_extract(lines[first.chunk+4], "(?<=Population: )(.*)(?=</li>)" )
costs <- str_extract(lines[first.chunk+5], "(?<=Cost: )(.*)(?=</li>)" )
funding.methods <- str_extract(lines[first.chunk+6], "(?<=Method: )(.*)(?=</li>)" )
governances <- str_extract(lines[first.chunk+7], "(?<=Governance: )(.*)(?=</li>)" )
services <- str_extract(lines[first.chunk+8], "(?<=Services: )(.*)(?=</li>)" )
speeds <- str_extract(lines[first.chunk+9], "(?<=Speed: )(.*)(?=</li>)" )
data <- data.frame(cbind(networks, communities, years, populations, costs, funding.methods, governances, services, speeds))
data
write.csv(data, file = "IXPs.csv")
separate(communities, c("City", "State"), sep =',')
first.chunk <- which(grepl("<p><strong>", lines))
#lines[first.chunk]
networks <- str_extract(lines[first.chunk], "(?<=<strong>)(.*\n?)(?=</strong>)")
communities <- str_extract(lines[first.chunk+1], "(?<=Served: )(.*)(?=</em>)" )
years <- str_extract(lines[first.chunk+3], "(?<=Year: )(.*)(?=</li>)" )
populations <- str_extract(lines[first.chunk+4], "(?<=Population: )(.*)(?=</li>)" )
costs <- str_extract(lines[first.chunk+5], "(?<=Cost: )(.*)(?=</li>)" )
funding.methods <- str_extract(lines[first.chunk+6], "(?<=Method: )(.*)(?=</li>)" )
governances <- str_extract(lines[first.chunk+7], "(?<=Governance: )(.*)(?=</li>)" )
services <- str_extract(lines[first.chunk+8], "(?<=Services: )(.*)(?=</li>)" )
speeds <- str_extract(lines[first.chunk+9], "(?<=Speed: )(.*)(?=</li>)" )
data <- data.frame(cbind(networks, communities, years, populations, costs, funding.methods, governances, services, speeds))
data
write.csv(data, file = "IXPs.csv")
separate(data, communities, c("City", "State"), sep =',')
first.chunk <- which(grepl("<p><strong>", lines))
#lines[first.chunk]
networks <- str_extract(lines[first.chunk], "(?<=<strong>)(.*\n?)(?=</strong>)")
communities <- str_extract(lines[first.chunk+1], "(?<=Served: )(.*)(?=</em>)" )
years <- str_extract(lines[first.chunk+3], "(?<=Year: )(.*)(?=</li>)" )
populations <- str_extract(lines[first.chunk+4], "(?<=Population: )(.*)(?=</li>)" )
costs <- str_extract(lines[first.chunk+5], "(?<=Cost: )(.*)(?=</li>)" )
funding.methods <- str_extract(lines[first.chunk+6], "(?<=Method: )(.*)(?=</li>)" )
governances <- str_extract(lines[first.chunk+7], "(?<=Governance: )(.*)(?=</li>)" )
services <- str_extract(lines[first.chunk+8], "(?<=Services: )(.*)(?=</li>)" )
speeds <- str_extract(lines[first.chunk+9], "(?<=Speed: )(.*)(?=</li>)" )
data <- data.frame(cbind(networks, communities, years, populations, costs, funding.methods, governances, services, speeds))
data
write.csv(data, file = "IXPs.csv")
data <- separate(data, communities, c("City", "State"), sep =',')
first.chunk <- which(grepl("<p><strong>", lines))
#lines[first.chunk]
networks <- str_extract(lines[first.chunk], "(?<=<strong>)(.*\n?)(?=</strong>)")
communities <- str_extract(lines[first.chunk+1], "(?<=Served: )(.*)(?=</em>)" )
years <- str_extract(lines[first.chunk+3], "(?<=Year: )(.*)(?=</li>)" )
populations <- str_extract(lines[first.chunk+4], "(?<=Population: )(.*)(?=</li>)" )
costs <- str_extract(lines[first.chunk+5], "(?<=Cost: )(.*)(?=</li>)" )
funding.methods <- str_extract(lines[first.chunk+6], "(?<=Method: )(.*)(?=</li>)" )
governances <- str_extract(lines[first.chunk+7], "(?<=Governance: )(.*)(?=</li>)" )
services <- str_extract(lines[first.chunk+8], "(?<=Services: )(.*)(?=</li>)" )
speeds <- str_extract(lines[first.chunk+9], "(?<=Speed: )(.*)(?=</li>)" )
data <- data.frame(cbind(networks, communities, years, populations, costs, funding.methods, governances, services, speeds))
data
write.csv(data, file = "IXPs.csv")
data <- separate(data, communities, c("City", "State", "other"), sep =',')
first.chunk <- which(grepl("<p><strong>", lines))
#lines[first.chunk]
networks <- str_extract(lines[first.chunk], "(?<=<strong>)(.*\n?)(?=</strong>)")
communities <- str_extract(lines[first.chunk+1], "(?<=Served: )(.*)(?=</em>)" )
years <- str_extract(lines[first.chunk+3], "(?<=Year: )(.*)(?=</li>)" )
populations <- str_extract(lines[first.chunk+4], "(?<=Population: )(.*)(?=</li>)" )
costs <- str_extract(lines[first.chunk+5], "(?<=Cost: )(.*)(?=</li>)" )
funding.methods <- str_extract(lines[first.chunk+6], "(?<=Method: )(.*)(?=</li>)" )
governances <- str_extract(lines[first.chunk+7], "(?<=Governance: )(.*)(?=</li>)" )
services <- str_extract(lines[first.chunk+8], "(?<=Services: )(.*)(?=</li>)" )
speeds <- str_extract(lines[first.chunk+9], "(?<=Speed: )(.*)(?=</li>)" )
data <- data.frame(cbind(networks, communities, years, populations, costs, funding.methods, governances, services, speeds))
data
write.csv(data, file = "IXPs.csv")
data <- separate(data, communities, c("City", "State"), sep =',')
first.chunk <- which(grepl("<p><strong>", lines))
#lines[first.chunk]
networks <- str_extract(lines[first.chunk], "(?<=<strong>)(.*\n?)(?=</strong>)")
communities <- str_extract(lines[first.chunk+1], "(?<=Served: )(.*)(?=</em>)" )
years <- str_extract(lines[first.chunk+3], "(?<=Year: )(.*)(?=</li>)" )
populations <- str_extract(lines[first.chunk+4], "(?<=Population: )(.*)(?=</li>)" )
costs <- str_extract(lines[first.chunk+5], "(?<=Cost: )(.*)(?=</li>)" )
funding.methods <- str_extract(lines[first.chunk+6], "(?<=Method: )(.*)(?=</li>)" )
governances <- str_extract(lines[first.chunk+7], "(?<=Governance: )(.*)(?=</li>)" )
services <- str_extract(lines[first.chunk+8], "(?<=Services: )(.*)(?=</li>)" )
speeds <- str_extract(lines[first.chunk+9], "(?<=Speed: )(.*)(?=</li>)" )
data <- data.frame(cbind(networks, communities, years, populations, costs, funding.methods, governances, services, speeds))
data
write.csv(data, file = "IXPs.csv")
data <- separate(data, communities, c("City", "State"), sep =',')
first.chunk <- which(grepl("<p><strong>", lines))
#lines[first.chunk]
networks <- str_extract(lines[first.chunk], "(?<=<strong>)(.*\n?)(?=</strong>)")
communities <- str_extract(lines[first.chunk+1], "(?<=Served: )(.*)(?=</em>)" )
years <- str_extract(lines[first.chunk+3], "(?<=Year: )(.*)(?=</li>)" )
populations <- str_extract(lines[first.chunk+4], "(?<=Population: )(.*)(?=</li>)" )
costs <- str_extract(lines[first.chunk+5], "(?<=Cost: )(.*)(?=</li>)" )
funding.methods <- str_extract(lines[first.chunk+6], "(?<=Method: )(.*)(?=</li>)" )
governances <- str_extract(lines[first.chunk+7], "(?<=Governance: )(.*)(?=</li>)" )
services <- str_extract(lines[first.chunk+8], "(?<=Services: )(.*)(?=</li>)" )
speeds <- str_extract(lines[first.chunk+9], "(?<=Speed: )(.*)(?=</li>)" )
data <- data.frame(cbind(networks, communities, years, populations, costs, funding.methods, governances, services, speeds))
data
write.csv(data, file = "IXPs.csv")
data <- separate(data, communities, c("city", "state"), sep =',')
states <- unique(trimws(data$state))
per_state <- data.frame()
for (location in states){
number <- dim(subset(data, state == location))[1]
new.row <- cbind(state, number)
bins <- rbind(new.row, new.row)
}
ones <- sum(connections_per_city$connections == 1)
twos <- sum(connections_per_city$connections == 2)
threes <- sum(connections_per_city$connections == 3)
fours <- sum(connections_per_city$connections == 4)
distribution <- cbind(ones, twos, threes, fours)
barplot(distribution)
write.csv(data, file = "IXPs.csv")
View(connections_per_city)
first.chunk <- which(grepl("<p><strong>", lines))
#lines[first.chunk]
networks <- str_extract(lines[first.chunk], "(?<=<strong>)(.*\n?)(?=</strong>)")
communities <- str_extract(lines[first.chunk+1], "(?<=Served: )(.*)(?=</em>)" )
years <- str_extract(lines[first.chunk+3], "(?<=Year: )(.*)(?=</li>)" )
populations <- str_extract(lines[first.chunk+4], "(?<=Population: )(.*)(?=</li>)" )
costs <- str_extract(lines[first.chunk+5], "(?<=Cost: )(.*)(?=</li>)" )
funding.methods <- str_extract(lines[first.chunk+6], "(?<=Method: )(.*)(?=</li>)" )
governances <- str_extract(lines[first.chunk+7], "(?<=Governance: )(.*)(?=</li>)" )
services <- str_extract(lines[first.chunk+8], "(?<=Services: )(.*)(?=</li>)" )
speeds <- str_extract(lines[first.chunk+9], "(?<=Speed: )(.*)(?=</li>)" )
data <- data.frame(cbind(networks, communities, years, populations, costs, funding.methods, governances, services, speeds))
data
write.csv(data, file = "IXPs.csv")
data <- separate(data, communities, c("city", "state"), sep =',')
states <- unique(trimws(data$state))
per_state <- data.frame()
for (location in states){
number <- dim(subset(data, state == location))[1]
new.row <- cbind(state, number)
bins <- rbind(new.row, new.row)
}
ones <- sum(bins$number == 1)
first.chunk <- which(grepl("<p><strong>", lines))
#lines[first.chunk]
networks <- str_extract(lines[first.chunk], "(?<=<strong>)(.*\n?)(?=</strong>)")
communities <- str_extract(lines[first.chunk+1], "(?<=Served: )(.*)(?=</em>)" )
years <- str_extract(lines[first.chunk+3], "(?<=Year: )(.*)(?=</li>)" )
populations <- str_extract(lines[first.chunk+4], "(?<=Population: )(.*)(?=</li>)" )
costs <- str_extract(lines[first.chunk+5], "(?<=Cost: )(.*)(?=</li>)" )
funding.methods <- str_extract(lines[first.chunk+6], "(?<=Method: )(.*)(?=</li>)" )
governances <- str_extract(lines[first.chunk+7], "(?<=Governance: )(.*)(?=</li>)" )
services <- str_extract(lines[first.chunk+8], "(?<=Services: )(.*)(?=</li>)" )
speeds <- str_extract(lines[first.chunk+9], "(?<=Speed: )(.*)(?=</li>)" )
data <- data.frame(cbind(networks, communities, years, populations, costs, funding.methods, governances, services, speeds))
data
write.csv(data, file = "IXPs.csv")
data <- separate(data, communities, c("city", "state"), sep =',')
states <- unique(trimws(data$state))
per_state <- data.frame()
for (location in states){
number <- dim(subset(data, state == location))[1]
new.row <- cbind(state, number)
bins <- rbind(new.row, new.row)
}
bins
first.chunk <- which(grepl("<p><strong>", lines))
#lines[first.chunk]
networks <- str_extract(lines[first.chunk], "(?<=<strong>)(.*\n?)(?=</strong>)")
communities <- str_extract(lines[first.chunk+1], "(?<=Served: )(.*)(?=</em>)" )
years <- str_extract(lines[first.chunk+3], "(?<=Year: )(.*)(?=</li>)" )
populations <- str_extract(lines[first.chunk+4], "(?<=Population: )(.*)(?=</li>)" )
costs <- str_extract(lines[first.chunk+5], "(?<=Cost: )(.*)(?=</li>)" )
funding.methods <- str_extract(lines[first.chunk+6], "(?<=Method: )(.*)(?=</li>)" )
governances <- str_extract(lines[first.chunk+7], "(?<=Governance: )(.*)(?=</li>)" )
services <- str_extract(lines[first.chunk+8], "(?<=Services: )(.*)(?=</li>)" )
speeds <- str_extract(lines[first.chunk+9], "(?<=Speed: )(.*)(?=</li>)" )
data <- data.frame(cbind(networks, communities, years, populations, costs, funding.methods, governances, services, speeds))
data
write.csv(data, file = "IXPs.csv")
data <- separate(data, communities, c("city", "state"), sep =',')
states <- unique(trimws(data$state))
per_state <- data.frame()
for (location in states){
number <- dim(subset(data, state == location))[1]
new.row <- cbind(state, number)
bins <- rbind(new.row, new.row)
}
first.chunk <- which(grepl("<p><strong>", lines))
#lines[first.chunk]
networks <- str_extract(lines[first.chunk], "(?<=<strong>)(.*\n?)(?=</strong>)")
communities <- str_extract(lines[first.chunk+1], "(?<=Served: )(.*)(?=</em>)" )
years <- str_extract(lines[first.chunk+3], "(?<=Year: )(.*)(?=</li>)" )
populations <- str_extract(lines[first.chunk+4], "(?<=Population: )(.*)(?=</li>)" )
costs <- str_extract(lines[first.chunk+5], "(?<=Cost: )(.*)(?=</li>)" )
funding.methods <- str_extract(lines[first.chunk+6], "(?<=Method: )(.*)(?=</li>)" )
governances <- str_extract(lines[first.chunk+7], "(?<=Governance: )(.*)(?=</li>)" )
services <- str_extract(lines[first.chunk+8], "(?<=Services: )(.*)(?=</li>)" )
speeds <- str_extract(lines[first.chunk+9], "(?<=Speed: )(.*)(?=</li>)" )
data <- data.frame(cbind(networks, communities, years, populations, costs, funding.methods, governances, services, speeds))
data
write.csv(data, file = "IXPs.csv")
data <- separate(data, communities, c("city", "state"), sep =',')
states <- unique(trimws(data$state))
per_state <- data.frame()
for (location in states){
number <- dim(subset(data, state == location))[1]
new.row <- cbind(state, number)
bins <- rbind(new.row, new.row)
}
bins
first.chunk <- which(grepl("<p><strong>", lines))
#lines[first.chunk]
networks <- str_extract(lines[first.chunk], "(?<=<strong>)(.*\n?)(?=</strong>)")
communities <- str_extract(lines[first.chunk+1], "(?<=Served: )(.*)(?=</em>)" )
years <- str_extract(lines[first.chunk+3], "(?<=Year: )(.*)(?=</li>)" )
populations <- str_extract(lines[first.chunk+4], "(?<=Population: )(.*)(?=</li>)" )
costs <- str_extract(lines[first.chunk+5], "(?<=Cost: )(.*)(?=</li>)" )
funding.methods <- str_extract(lines[first.chunk+6], "(?<=Method: )(.*)(?=</li>)" )
governances <- str_extract(lines[first.chunk+7], "(?<=Governance: )(.*)(?=</li>)" )
services <- str_extract(lines[first.chunk+8], "(?<=Services: )(.*)(?=</li>)" )
speeds <- str_extract(lines[first.chunk+9], "(?<=Speed: )(.*)(?=</li>)" )
data <- data.frame(cbind(networks, communities, years, populations, costs, funding.methods, governances, services, speeds))
data
write.csv(data, file = "IXPs.csv")
data <- separate(data, communities, c("city", "state"), sep =',')
states <- unique(trimws(data$state))
per_state <- data.frame()
for (location in states){
number <- length(subset(data, state == location))
new.row <- cbind(state, number)
bins <- rbind(new.row, new.row)
}
bins
first.chunk <- which(grepl("<p><strong>", lines))
#lines[first.chunk]
networks <- str_extract(lines[first.chunk], "(?<=<strong>)(.*\n?)(?=</strong>)")
communities <- str_extract(lines[first.chunk+1], "(?<=Served: )(.*)(?=</em>)" )
years <- str_extract(lines[first.chunk+3], "(?<=Year: )(.*)(?=</li>)" )
populations <- str_extract(lines[first.chunk+4], "(?<=Population: )(.*)(?=</li>)" )
costs <- str_extract(lines[first.chunk+5], "(?<=Cost: )(.*)(?=</li>)" )
funding.methods <- str_extract(lines[first.chunk+6], "(?<=Method: )(.*)(?=</li>)" )
governances <- str_extract(lines[first.chunk+7], "(?<=Governance: )(.*)(?=</li>)" )
services <- str_extract(lines[first.chunk+8], "(?<=Services: )(.*)(?=</li>)" )
speeds <- str_extract(lines[first.chunk+9], "(?<=Speed: )(.*)(?=</li>)" )
data <- data.frame(cbind(networks, communities, years, populations, costs, funding.methods, governances, services, speeds))
data
write.csv(data, file = "IXPs.csv")
data <- separate(data, communities, c("city", "state"), sep =',')
states <- unique(trimws(data$state))
per_state <- data.frame()
for (location in states){
number <- length(subset(data, state == location))
new.row <- cbind(state, number)
bins <- rbind(new.row, new.row)
}
subset(data, state= 'Alabama')
first.chunk <- which(grepl("<p><strong>", lines))
#lines[first.chunk]
networks <- str_extract(lines[first.chunk], "(?<=<strong>)(.*\n?)(?=</strong>)")
communities <- str_extract(lines[first.chunk+1], "(?<=Served: )(.*)(?=</em>)" )
years <- str_extract(lines[first.chunk+3], "(?<=Year: )(.*)(?=</li>)" )
populations <- str_extract(lines[first.chunk+4], "(?<=Population: )(.*)(?=</li>)" )
costs <- str_extract(lines[first.chunk+5], "(?<=Cost: )(.*)(?=</li>)" )
funding.methods <- str_extract(lines[first.chunk+6], "(?<=Method: )(.*)(?=</li>)" )
governances <- str_extract(lines[first.chunk+7], "(?<=Governance: )(.*)(?=</li>)" )
services <- str_extract(lines[first.chunk+8], "(?<=Services: )(.*)(?=</li>)" )
speeds <- str_extract(lines[first.chunk+9], "(?<=Speed: )(.*)(?=</li>)" )
data <- data.frame(cbind(networks, communities, years, populations, costs, funding.methods, governances, services, speeds))
data
write.csv(data, file = "IXPs.csv")
data <- separate(data, communities, c("city", "state"), sep =',')
data[data$state=='Alabama']
data <- separate(data, communities, c("city", "state"), sep =',')
data <- separate(data, communities, c("city", "state"), sep =',')
data <- separate(data, data$communities, c("city", "state"), sep =',')
data <- separate(data, communities, c("city", "state"), sep =',')
data <- separate(data$communities, c("city", "state"), sep =',')
data <- data.frame(cbind(networks, communities, years, populations, costs, funding.methods, governances, services, speeds))
data
write.csv(data, file = "IXPs.csv")
MACs <- c(str_extract(lines1, "[0-9A-F]{2}-[0-9A-F]{2}-[0-9A-F]{2}"))
Manufacturers <- c(str_extract(lines1, "(?<=\\t\\t)(.*)"))
Addresses <- c(lines2)
Zips <- c(str_extract(lines3, "[0-9]{5}"))
Region <- c(str_extract(lines3, "([^[0-9]{5}]+)"))
Country <- c(str_extract(lines4, "[:alpha:]{2}"))
data <- cbind(MACs, Manufacturers, Addresses, Zips, Region, Country)
write.csv(data, file = "MACs/IEEE-MACs.csv")
Zip
MACs <- c(str_extract(lines1, "[0-9A-F]{2}-[0-9A-F]{2}-[0-9A-F]{2}"))
Manufacturers <- c(str_extract(lines1, "(?<=\\t\\t)(.*)"))
Addresses <- c(lines2)
Zips <- c(str_extract(lines3, "[0-9]{5}"))
Region <- c(str_extract(lines3, "([^[0-9]{5}]+)"))
Country <- c(str_extract(lines4, "[:alpha:]{2}"))
data <- cbind(MACs, Manufacturers, Addresses, Zips, Region, Country)
write.csv(data, file = "MACs/IEEE-MACs.csv")
Zips
MACs <- c(str_extract(lines1, "[0-9A-F]{2}-[0-9A-F]{2}-[0-9A-F]{2}"))
Manufacturers <- c(str_extract(lines1, "(?<=\\t\\t)(.*)"))
Addresses <- c(lines2)
Zips <- c(str_extract(lines3, "[0-9]{5}"))
Region <- c(str_extract(lines3, "([^[0-9]{5}]+)"))
Country <- c(str_extract(lines4, "[:alpha:]{2}"))
data <- cbind(MACs, Manufacturers, Addresses, Zips, Region, Country)
write.csv(data, file = "MACs/IEEE-MACs.csv")
data
lines <- readLines(data.file3)
#head(lines)
first.chunk <- which(grepl("[0-9A-F]{2}-[0-9A-F]{2}-[0-9A-F]{2}", lines))
lines1 = lines[first.chunk]
lines2 = str_extract_all(lines[first.chunk+2], "(?<=\\t\\t\\t\\t)(.*)")
lines3 = str_extract_all(lines[first.chunk+3], "(?<=\\t\\t\\t\\t)(.*)")
lines4 = lines[first.chunk+4]
data.file3 <- curl_download("http://standards-oui.ieee.org/oui.txt", "MACs/IEEE-MACs.txt")
data.file3
lines <- readLines(data.file3)
#head(lines)
first.chunk <- which(grepl("[0-9A-F]{2}-[0-9A-F]{2}-[0-9A-F]{2}", lines))
lines1 = lines[first.chunk]
lines2 = str_extract_all(lines[first.chunk+2], "(?<=\\t\\t\\t\\t)(.*)")
lines3 = str_extract_all(lines[first.chunk+3], "(?<=\\t\\t\\t\\t)(.*)")
lines4 = lines[first.chunk+4]
MACs <- c(str_extract(lines1, "[0-9A-F]{2}-[0-9A-F]{2}-[0-9A-F]{2}"))
Manufacturers <- c(str_extract(lines1, "(?<=\\t\\t)(.*)"))
Addresses <- c(lines2)
Zips <- c(str_extract(lines3, "[0-9]{5}"))
Region <- c(str_extract(lines3, "([^[0-9]{5}]+)"))
Country <- c(str_extract(lines4, "[:alpha:]{2}"))
data <- cbind(MACs, Manufacturers, Addresses, Zips, Region, Country)
write.csv(data, file = "MACs/IEEE-MACs.csv")
data
MACs <- c(str_extract(lines1, "[0-9A-F]{2}-[0-9A-F]{2}-[0-9A-F]{2}"))
Manufacturers <- c(str_extract(lines1, "(?<=\\t\\t)(.*)"))
Addresses <- c(lines2)
Zips <- c(str_extract(lines3, "[0-9]{5}"))
Region <- c(str_extract(lines3, "([^[0-9]{5}]+)"))
Country <- c(str_extract(lines4, "[:alpha:]{2}"))
data <- cbind(MACs, Manufacturers, Addresses, Zips, Region, Country)
write.csv(data, file = "MACs/IEEE-MACs.csv")
head(data)
MACs <- c(str_extract(lines1, "[0-9A-F]{2}-[0-9A-F]{2}-[0-9A-F]{2}"))
Manufacturers <- c(str_extract(lines1, "(?<=\\t\\t)(.*)"))
Addresses <- c(lines2)
Zips <- c(str_extract(lines3, "[0-9]{5}"))
Region <- c(str_extract(lines3, "([^[0-9]{5}]+)"))
Country <- c(str_extract(lines4, "[:alpha:]{2}"))
data <- cbind(MACs, Manufacturers, Addresses, Zips, Region, Country)
write.csv(data, file = "MACs/IEEE-MACs.csv")
head(data)
per_zip = data.frame()
for (zip in unique(zips)){
for (location in states){
number <- length(subset(data, state == location))
new.row <- cbind(state, number)
bins <- rbind(new.row, new.row)
}
}
per_zip = data.frame()
for (zip in unique(zips)){
for (location in states){
number <- length(subset(data, state == location))
new.row <- cbind(state, number)
bins <- rbind(new.row, new.row)
}
}
per_zip = data.frame()
for (zip in unique(Zips)){
for (location in states){
number <- length(subset(data, state == location))
new.row <- cbind(state, number)
bins <- rbind(new.row, new.row)
}
}
per_zip = data.frame()
for (zip in unique(Zips)){
for (location in states){
number <- length(subset(data, state == location))
new.row <- cbind(state, number)
bins <- rbind(new.row, new.row)
}
bins
}
per_zip = data.frame()
for (zip in unique(Zips)){
number <- length(subset(data, state == location))
new.row <- cbind(state, number)
bins <- rbind(new.row, new.row)
}
bins
per_zip = data.frame()
for (zip in unique(Zips)){
number <- length(subset(data, Zips == location))
new.row <- cbind(zip, number)
bins <- rbind(new.row, new.row)
}
bins
per_zip = data.frame()
for (zip in unique(Zips)){
number <- length(subset(data, Zips == zip))
new.row <- cbind(zip, number)
bins <- rbind(new.row, new.row)
}
bins
per_zip = data.frame()
unique(zips)
per_zip = data.frame()
unique(Zips)
per_zip = data.frame()
dim(unique(Zips))
per_zip = data.frame()
head(unique(Zips))
per_zip = data.frame()
list <- (unique(Zips))
subset(data, Zips == zip)
per_zip = data.frame()
list <- (unique(Zips))
#subset(data, Zips == zip)
per_zip = data.frame()
list <- (unique(Country))
#subset(data, Zips == zip)
per_country = data.frame()
list <- unique(Country)
#subset(data, Zips == zip)
